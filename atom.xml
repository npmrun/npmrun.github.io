<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>时光之城</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xieyaxin.top/"/>
  <updated>2020-07-12T15:30:22.459Z</updated>
  <id>https://xieyaxin.top/</id>
  
  <author>
    <name>西风吹盛夏</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>有关vmware中主机访问虚拟机端口</title>
    <link href="https://xieyaxin.top/2020/07/12/%E8%99%9A%E6%8B%9F%E6%9C%BA/%E6%9C%89%E5%85%B3vmware%E4%B8%AD%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AB%AF%E5%8F%A3/"/>
    <id>https://xieyaxin.top/2020/07/12/%E8%99%9A%E6%8B%9F%E6%9C%BA/%E6%9C%89%E5%85%B3vmware%E4%B8%AD%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AB%AF%E5%8F%A3/</id>
    <published>2020-07-12T23:03:11.000Z</published>
    <updated>2020-07-12T15:30:22.459Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>主题：主要是为了试一下nginx配置rtmp的网络推拉流<br>概述：了解以下虚拟机与主机的端口映射基本操作</p></blockquote><!--正文--><a id="more"></a><ol><li><p>确认你的虚拟机的网络适配器是<code>NAT</code></p><p><img src= "/img/loading.gif" data-src="/static/%E8%99%9A%E6%8B%9F%E6%9C%BA/%E6%9C%89%E5%85%B3vmware%E4%B8%AD%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AB%AF%E5%8F%A3/images/image-20200712231430886.png" alt="image-20200712231430886"></p></li><li><p>当然，我们首先打开<code>VMware</code>中的虚拟机，我用的是<code>elementoryOS中文版</code></p><p><img src= "/img/loading.gif" data-src="/static/%E8%99%9A%E6%8B%9F%E6%9C%BA/%E6%9C%89%E5%85%B3vmware%E4%B8%AD%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AB%AF%E5%8F%A3/images/image-20200712230538875.png" alt="image-20200712230538875"></p></li><li><p>打开终端，输入<code>ifconfig -a</code>查看你的IP地址，当你看到下面图的时候，不要慌，点击如下图那个图标，会弹出一个页面，里面可能会有你的ip地址显示，没有的话只能自己先去安装一个网络库了。</p><p><img src= "/img/loading.gif" data-src="/static/%E8%99%9A%E6%8B%9F%E6%9C%BA/%E6%9C%89%E5%85%B3vmware%E4%B8%AD%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AB%AF%E5%8F%A3/images/image-20200712230718842.png" alt="终端"></p><p><img src= "/img/loading.gif" data-src="/static/%E8%99%9A%E6%8B%9F%E6%9C%BA/%E6%9C%89%E5%85%B3vmware%E4%B8%AD%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AB%AF%E5%8F%A3/images/image-20200712230738863.png" alt="网络"></p></li><li><p>由于我想要转发是nginx配置的页面，所以先查看以下nginx是否启动了，然后确保你需要转发的端口是真实有效的，如图，我配置过了 nginx，因此就会显示一个网页，我需要的就是转发这个端口</p><p><img src= "/img/loading.gif" data-src="/static/%E8%99%9A%E6%8B%9F%E6%9C%BA/%E6%9C%89%E5%85%B3vmware%E4%B8%AD%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AB%AF%E5%8F%A3/images/image-20200712231056969.png" alt="image-20200712231056969"></p></li><li><p>这个时候我们回到<code>vmware</code>上,我们打开，<code>编辑--&gt;虚拟网络地址编辑器</code></p><p><img src= "/img/loading.gif" data-src="/static/%E8%99%9A%E6%8B%9F%E6%9C%BA/%E6%9C%89%E5%85%B3vmware%E4%B8%AD%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AB%AF%E5%8F%A3/images/image-20200712231252798.png" alt="image-20200712231252798"></p></li><li><p>如上图，我们必须要网络管理员的特权，因此点击那个更改设置，这个窗口就会重新加载，这个时候就可以编辑了。这个时候看图步骤操作：</p><p><img src= "/img/loading.gif" data-src="/static/%E8%99%9A%E6%8B%9F%E6%9C%BA/%E6%9C%89%E5%85%B3vmware%E4%B8%AD%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AB%AF%E5%8F%A3/images/image-20200712231708242.png" alt="image-20200712231708242"></p><p>​    <img src= "/img/loading.gif" data-src="/static/%E8%99%9A%E6%8B%9F%E6%9C%BA/%E6%9C%89%E5%85%B3vmware%E4%B8%AD%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AB%AF%E5%8F%A3/images/image-20200712231805058.png" alt="image-20200712231805058"></p><p><img src= "/img/loading.gif" data-src="/static/%E8%99%9A%E6%8B%9F%E6%9C%BA/%E6%9C%89%E5%85%B3vmware%E4%B8%AD%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AB%AF%E5%8F%A3/images/image-20200712231815534.png" alt="image-20200712231815534"></p></li><li><p>这个时候就需要填你自己的数据了：</p><table><thead><tr><th>名称</th><th>描述</th><th>不知道的谢我推荐的</th></tr></thead><tbody><tr><td>主机端口</td><td>表示你在你PC上需要用到那个端口跟你虚拟机的映射</td><td>12345</td></tr><tr><td>类型</td><td>直接默认TCP就行了</td><td>TCP</td></tr><tr><td>虚拟机IP地址</td><td>这里填你上面查到的虚拟机的IP地址</td><td>192.168.x.x(x可不能乱填)</td></tr><tr><td>端口</td><td>填nginx中需要映射的端口</td><td>9606（我的虚拟机里配置过的网页端口）</td></tr><tr><td>描述</td><td>随意</td><td></td></tr></tbody></table><p>写玩点确认就行了，回到上一页的时候确认一下，没问题就表示OK了。</p></li><li><p>测试，OK，主机上能访问了</p><p><img src= "/img/loading.gif" data-src="/static/%E8%99%9A%E6%8B%9F%E6%9C%BA/%E6%9C%89%E5%85%B3vmware%E4%B8%AD%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AB%AF%E5%8F%A3/images/image-20200712232327323.png" alt="image-20200712232327323"></p></li></ol><blockquote><p>注意：</p><p>你挂起了或者关闭了虚拟机就没用了。</p></blockquote><p>更高级的用法请参见参考资料中的。</p><blockquote><p>参考资料：</p><p><a href="https://blog.csdn.net/u012268339/article/details/61204801" target="_blank" rel="external nofollow noopener noreferrer"><em>局域网访问电脑中VMware虚拟机</em></a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;主题：主要是为了试一下nginx配置rtmp的网络推拉流&lt;br&gt;概述：了解以下虚拟机与主机的端口映射基本操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--正文--&gt;
    
    </summary>
    
    
      <category term="虚拟机" scheme="https://xieyaxin.top/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>从零开始搭建一个工程化项目(一)Babel</title>
    <link href="https://xieyaxin.top/2020/07/11/webpack/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%B7%A5%E7%A8%8B%E5%8C%96%E9%A1%B9%E7%9B%AE(%E4%B8%80)Babel/"/>
    <id>https://xieyaxin.top/2020/07/11/webpack/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%B7%A5%E7%A8%8B%E5%8C%96%E9%A1%B9%E7%9B%AE(%E4%B8%80)Babel/</id>
    <published>2020-07-11T22:21:09.000Z</published>
    <updated>2020-07-12T15:30:22.455Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>主题：这篇主要写Babel的理解<br>概述：该专题主要写我在重启又一个webpack项目的时候遇到的问题，记录下来，方便理解，以及后面更少的踩坑</p></blockquote><!--正文--><a id="more"></a><h1 id="Babel"><a href="#Babel" class="headerlink" title="Babel"></a>Babel</h1><blockquote><p>我是从Babel开始搭建的，因为之前对这个鬼东西只存在于会用的阶段，但是具体里面更深入的东西确实没有去了解。借此机会，好好理解一下! 当然，最好的教材就是<a href="https://babeljs.io/" target="_blank" rel="external nofollow noopener noreferrer">官网</a>！不过我还是想看<a href="https://babel.docschina.org/docs/en/babel-preset-env" target="_blank" rel="external nofollow noopener noreferrer">中文网</a></p></blockquote><p>前言，你如果想要了解Babel的具体功能，建议去看看中文网，或者英文官网就行了，看之前就记住Babel就是一个翻译器，它可以将高版本的JS语法翻译成适合在低版本中运行的JS，当然，只限于Javascript。如果想要CSS也兼容一下，那么可以去看另一个Awesome的库：Postcss</p><p>目前我所涉及到的部分Babel库：</p><ul><li><p><code>@babel/preset-env</code></p><p>它是一个智能预设，它使您可以使用最新的<code>JavaScript</code>，而无需微观管理目标环境所需的语法转换（以及可选的浏览器<code>polyfill</code>）。 这都使您的生活更轻松，<code>JavaScript</code>包更小！</p></li><li><p><code>@babel/preset-typescript</code></p><p>其中包含了<a href="https://babel.docschina.org/docs/en/babel-plugin-transform-typescript" target="_blank" rel="external nofollow noopener noreferrer">@babel/plugin-transform-typescript</a>,用于转化<code>ts</code>文件的预设插件</p></li><li><p><code>@babel/plugin-transform-runtime</code></p><p>允许重用Babel注入的帮助代码以节省编码的插件。其中如果<code>corejs</code>指定了3(或2)的话，就需要额外安装另一个对应大版本的<code>@babel/runtime-corejs3</code>插件.同时我们需要安装另一个插件：<code>@babel/runtime</code>.</p><blockquote><p>帮助学习： <a href="https://zhuanlan.zhihu.com/p/147083132" target="_blank" rel="external nofollow noopener noreferrer">https://zhuanlan.zhihu.com/p/147083132</a></p></blockquote></li><li><p><code>@babel/plugin-syntax-dynamic-import</code></p><p>动态导入的lib,使代码中能够使用<code>import()</code>动态引入文件，但是貌似在IE11中有问题，因此就可以用<code>babel-plugin-dynamic-import-polyfill</code>代替一下，等官网有更好的决绝方案</p><blockquote><p>问题描述：</p><p><a href="https://babeljs.io/docs/en/babel-plugin-syntax-dynamic-import" target="_blank" rel="external nofollow noopener noreferrer">https://babeljs.io/docs/en/babel-plugin-syntax-dynamic-import</a></p><p><a href="https://github.com/babel/babel/issues/9872" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/babel/babel/issues/9872</a></p></blockquote></li><li><p><code>babel-plugin-dynamic-import-polyfill</code></p><p>用于简便的处理<code>@babel/plugin-syntax-dynamic-import</code>在IE11以下的BUG</p></li><li><p><code>@babel/cli</code></p><p>用于命令行执行babel转化的必要工具</p></li><li><p><code>@babel/core</code></p><p>babel核心代码，这是必须的，主要用于代码的转换，也可直接转化<code>Ast</code></p></li><li><p><code>@babel/runtime-corejs3</code></p><p><code>@babel/plugin-transform-runtime</code>指定<code>corejs：3</code>时必须引入的库，否则会找不到这个包。</p></li><li><p><code>babel-loader</code></p><p>webpack的加载器</p></li><li><p><code>@babel/polyfill</code></p><p>这将模拟一个完整的ES2015 +环境（不包含第4阶段的提议），并且打算在应用程序中使用，而不是在库/工具中使用。 （使用babel-node时会自动加载此polyfill）。7.4.0之后貌似不推荐了。</p><blockquote><ul><li><p>如果在.babelrc中指定了useBuiltIns：’usage’，则在webpack.config.js条目数组或源文件中都不包含@ babel / polyfill。 注意，仍需要安装@ babel / polyfill。</p></li><li><p>如果在.babelrc中指定了useBuiltIns：’entry’，则如上所述，通过require或import在应用程序入口点的顶部包含@ babel / polyfill。</p></li></ul><p>总之，必须要安装，或者用7.4.0推荐的用法可以不安装</p></blockquote><blockquote><p>浏览器的话可以直接接入CDN就行了，如下面这个：</p><p><a href="https://cdn.bootcss.com/babel-polyfill/7.6.0/polyfill.js" target="_blank" rel="external nofollow noopener noreferrer">https://cdn.bootcss.com/babel-polyfill/7.6.0/polyfill.js</a></p></blockquote></li><li><p><code>@babel/runtime</code></p><p><code>@babel/plugin-transform-runtime</code>必须的lib</p></li></ul><h2 id="安装相关库"><a href="#安装相关库" class="headerlink" title="安装相关库"></a>安装相关库</h2><p><strong>Babel</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev @babel&#x2F;core @babel&#x2F;cli @babel&#x2F;preset-env</span><br><span class="line">npm install --save-dev @babel&#x2F;plugin-transform-runtime @babel&#x2F;runtime</span><br><span class="line">npm install --save-dev @babel&#x2F;runtime-corejs3</span><br><span class="line">npm install --save-dev babel-plugin-dynamic-import-polyfill</span><br><span class="line">npm install --save @babel&#x2F;polyfill</span><br></pre></td></tr></table></figure><p>根目录的<code>babel.config.json</code>配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;presets&quot;: [</span><br><span class="line">    [</span><br><span class="line">      &quot;@babel&#x2F;preset-env&quot;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;useBuiltIns&quot;: &quot;usage&quot;,</span><br><span class="line">        &quot;corejs&quot;: 3</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">      &quot;@babel&#x2F;preset-typescript&quot;</span><br><span class="line">    ]</span><br><span class="line">  ],</span><br><span class="line">  &quot;plugins&quot;: [</span><br><span class="line">    [</span><br><span class="line">      &quot;@babel&#x2F;plugin-transform-runtime&quot;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;corejs&quot;: 3</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">      &quot;babel-plugin-dynamic-import-polyfill&quot;</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="新建一个Demo试验场"><a href="#新建一个Demo试验场" class="headerlink" title="新建一个Demo试验场"></a>新建一个Demo试验场</h3><ol><li><p>找到自己的一个目录，新建Demo文件，例如的我的是<code>babel-run-demo</code>。</p></li><li><p>终端进入这个文件夹</p></li><li><p>执行<code>npm init -y</code></p></li><li><p>打开<code>package.json</code>,直接复制我的配置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;babel-run-demo&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;index.js&quot;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;start&quot;: &quot;babel source  --extensions .ts --out-dir dist&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;keywords&quot;: [],</span><br><span class="line">  &quot;author&quot;: &quot;&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;,</span><br><span class="line">  &quot;devDependencies&quot;: &#123;</span><br><span class="line">    &quot;@babel&#x2F;cli&quot;: &quot;^7.10.4&quot;,</span><br><span class="line">    &quot;@babel&#x2F;core&quot;: &quot;^7.10.4&quot;,</span><br><span class="line">    &quot;@babel&#x2F;plugin-syntax-dynamic-import&quot;: &quot;^7.8.3&quot;,</span><br><span class="line">    &quot;@babel&#x2F;plugin-transform-runtime&quot;: &quot;^7.10.4&quot;,</span><br><span class="line">    &quot;@babel&#x2F;preset-env&quot;: &quot;^7.10.4&quot;,</span><br><span class="line">    &quot;@babel&#x2F;preset-typescript&quot;: &quot;^7.10.4&quot;,</span><br><span class="line">    &quot;@babel&#x2F;runtime-corejs3&quot;: &quot;^7.10.4&quot;,</span><br><span class="line">    &quot;babel-plugin-dynamic-import-polyfill&quot;: &quot;^1.0.0&quot;,</span><br><span class="line">    &quot;@babel&#x2F;polyfill&quot;: &quot;^7.10.4&quot;,</span><br><span class="line">    &quot;@babel&#x2F;runtime&quot;: &quot;^7.10.4&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>执行<code>npm i</code>,安装依赖</p></li><li><p>新建一个<code>babel.config.json</code>配置文件（如果<code>package.json</code>中没有配置的话就会读取）配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;presets&quot;: [</span><br><span class="line">    [</span><br><span class="line">      &quot;@babel&#x2F;preset-env&quot;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;useBuiltIns&quot;: &quot;usage&quot;,</span><br><span class="line">        &quot;corejs&quot;: 3</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">      &quot;@babel&#x2F;preset-typescript&quot;</span><br><span class="line">    ]</span><br><span class="line">  ],</span><br><span class="line">  &quot;plugins&quot;: [</span><br><span class="line">    [</span><br><span class="line">      &quot;@babel&#x2F;plugin-transform-runtime&quot;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;corejs&quot;: 3</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    [</span><br><span class="line">      &quot;babel-plugin-dynamic-import-polyfill&quot;</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新建一个<code>.browserslistrc</code>文件，用于指定兼容哪些浏览器，如果在<code>babel.config.json</code>中<code>@babel/preset-env</code>没有配置<code>target</code>字段就会读取这里的配置。</p></li><li><p>根目录下新建目录<code>source</code>,因为我在<code>package.json</code>中指定了只转换<code>source</code>中的文件。</p></li><li><p>随意建一个例如<code>main.ts</code>的代码（或者<code>js</code>，都行）写点代码上去：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">const add &#x3D; (a,b)&#x3D;&gt;&#123;</span><br><span class="line">    return a+b;</span><br><span class="line">&#125;</span><br><span class="line">new Promise(resolve &#x3D;&gt; &#123;</span><br><span class="line">    setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">        resolve(12234323)</span><br><span class="line">    &#125;, 2000);</span><br><span class="line">&#125;).then(res&#x3D;&gt;&#123;</span><br><span class="line">    console.log(123);</span><br><span class="line">&#125;).catch(e&#x3D;&gt;&#123;</span><br><span class="line">    console.log(e)</span><br><span class="line">&#125;)</span><br><span class="line">console.log([1,2,5,3].includes(1));</span><br><span class="line">console.log(process.env.NODE_ENV);</span><br><span class="line">export default &#123;</span><br><span class="line">    ab: 1332</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>执行<code>npm start</code>命令，完成之后就会在根目录下发现一个<code>dist</code>文件夹，其中便是转换过后的代码了。如<code>main.js</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&quot;use strict&quot;;</span><br><span class="line"></span><br><span class="line">var _interopRequireDefault &#x3D; require(&quot;@babel&#x2F;runtime-corejs3&#x2F;helpers&#x2F;interopRequireDefault&quot;);</span><br><span class="line"></span><br><span class="line">var _promise &#x3D; _interopRequireDefault(require(&quot;@babel&#x2F;runtime-corejs3&#x2F;core-js-stable&#x2F;promise&quot;));</span><br><span class="line"></span><br><span class="line">var _interopRequireWildcard2 &#x3D; _interopRequireDefault(require(&quot;@babel&#x2F;runtime-corejs3&#x2F;helpers&#x2F;interopRequireWildcard&quot;));</span><br><span class="line"></span><br><span class="line">var _main &#x3D; _interopRequireDefault(require(&quot;@&#x2F;main&quot;));</span><br><span class="line"></span><br><span class="line">var _axios &#x3D; _interopRequireDefault(require(&quot;axios&quot;));</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; import aba from &quot;@&#x2F;a&quot;</span><br><span class="line">console.log([&quot;asssssssssssssssssss&quot;]);</span><br><span class="line"></span><br><span class="line">let ac &#x3D; _promise.default.resolve().then(() &#x3D;&gt; (0, _interopRequireWildcard2.default)(require(&quot;@&#x2F;a&quot;)));</span><br><span class="line"></span><br><span class="line">console.log(ac.then(r &#x3D;&gt; console.log(r)));</span><br><span class="line">console.log(_main.default); &#x2F;&#x2F; console.log(aba);</span><br><span class="line"></span><br><span class="line">console.log(_axios.default.defaults);</span><br></pre></td></tr></table></figure></li></ol><p>这个时候的代码只能用<code>node</code>执行，如果想在浏览器中执行必须要借助<code>webpack</code>或其他工具将导入的一起打包。如上，转化过后的代码引入了<code>@babel/runtime-corejs3</code>，因此这个包是必须的，如果你发现你转化后的代码没有这个引入，那么安不安装都无所谓。</p><p>最后附上<code>Git</code>仓库地址，<a href="http://git.poorman.top/Demo/babel-run-demo" target="_blank" rel="external nofollow noopener noreferrer">点击这里</a></p><blockquote><p>参考资料：</p><p><a href="https://zhuanlan.zhihu.com/p/147083132" target="_blank" rel="external nofollow noopener noreferrer">@babel/plugin-transform-runtime 到底是什么</a></p><p><a href="https://babel.docschina.org/" target="_blank" rel="external nofollow noopener noreferrer">中文官网</a></p><p><a href="https://www.jianshu.com/p/bd9cb7861b85" target="_blank" rel="external nofollow noopener noreferrer"><em>browserslist 目标浏览器配置表</em></a></p><p><a href="https://blog.csdn.net/m0_37846579/article/details/103379084" target="_blank" rel="external nofollow noopener noreferrer"><em>@babel/preset-env 与@babel/plugin-transform-runtime 使用及场景区别</em></a></p><p><em><a href="https://www.cnblogs.com/dapengFly/p/9876915.html" target="_blank" rel="external nofollow noopener noreferrer">Babel：plugin、preset的区别与使用</a></em></p><p><a href="https://github.com/chyingp/blog/tree/master/demo/2018.05.31-babel-plugin-preset/create-preset" target="_blank" rel="external nofollow noopener noreferrer">Github上自定义babel预设的示例仓库</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;主题：这篇主要写Babel的理解&lt;br&gt;概述：该专题主要写我在重启又一个webpack项目的时候遇到的问题，记录下来，方便理解，以及后面更少的踩坑&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--正文--&gt;
    
    </summary>
    
    
      <category term="webpack" scheme="https://xieyaxin.top/categories/webpack/"/>
    
    
  </entry>
  
  <entry>
    <title>关于移动端h5页面不能滑动问题的解决办法</title>
    <link href="https://xieyaxin.top/2020/07/08/%E5%89%8D%E7%AB%AF/%E5%85%B3%E4%BA%8E%E7%A7%BB%E5%8A%A8%E7%AB%AFh5%E9%A1%B5%E9%9D%A2%E4%B8%8D%E8%83%BD%E6%BB%91%E5%8A%A8%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://xieyaxin.top/2020/07/08/%E5%89%8D%E7%AB%AF/%E5%85%B3%E4%BA%8E%E7%A7%BB%E5%8A%A8%E7%AB%AFh5%E9%A1%B5%E9%9D%A2%E4%B8%8D%E8%83%BD%E6%BB%91%E5%8A%A8%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</id>
    <published>2020-07-08T17:34:36.000Z</published>
    <updated>2020-07-12T15:30:22.455Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>主题：<br>概述：</p></blockquote><!--正文--><a id="more"></a><p>有的人说如果我写很多个p标签不写任何样式看能不能滑动，如果能滑动说明是样式的原因，要是也不能滑动那就应该是js的原因，是有一定的道理的，但是先别忘了看一下你的html或body是不是加了<code>height：100%；overflow：hidden</code></p><ol><li><p>下面分先说css的问题，主要排查<code>overflow：hidden</code>；</p><p>检查也有一定的顺序，检查超出高度的标签是否用了<code>overflow：hidden</code>；最好先检查<code>html</code>或<code>body</code>是不是加了<code>height：100%</code>；<code>overflow：hidden</code>；然后再看包裹在最外边的元素是否加了<code>overflow：hidden</code>;</p></li><li><p>再说下js方面的问题，主要是有在<code>touchstart</code>、<code>touchmove</code>或<code>touchend</code>等事件中的阻止默认事件的原因</p><p>例如：</p></li></ol><pre><code>$(&quot;#myCarousel&quot;).on(&quot;touchstart&quot;, function (e) {                 e.preventDefault();                    startX = e.originalEvent.changedTouches[0].pageX,                startY = e.originalEvent.changedTouches[0].pageY;      })；</code></pre><p>   这种代码其中<code>e.preventDefault();</code>会阻止掉默认的滚动行为。</p><ol start="3"><li><p>我的情况是能上滑，不能下滑经过排查，之前是写了<code>\* {margin:0;padding: 0;touch-action: none;}</code>代码，是为了解决一个报错的问题，但是在结合<code>mescroll</code>之后，排查问题发现是这里的问题，后来这样改就行了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.list&#123;</span><br><span class="line">*&#123;</span><br><span class="line">       touch-action: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就是将手指滑动的区域的<code>touch-action</code>设置为<code>auto</code>.</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;主题：&lt;br&gt;概述：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--正文--&gt;
    
    </summary>
    
    
      <category term="前端" scheme="https://xieyaxin.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>公告！！！</title>
    <link href="https://xieyaxin.top/2020/07/02/%E5%85%AC%E5%91%8A/%E5%85%AC%E5%91%8A%EF%BC%81%EF%BC%81%EF%BC%81/"/>
    <id>https://xieyaxin.top/2020/07/02/%E5%85%AC%E5%91%8A/%E5%85%AC%E5%91%8A%EF%BC%81%EF%BC%81%EF%BC%81/</id>
    <published>2020-07-02T09:42:32.000Z</published>
    <updated>2020-07-12T15:30:22.455Z</updated>
    
    <content type="html"><![CDATA[<h1 id="公告"><a href="#公告" class="headerlink" title="公告"></a>公告</h1><p>博客整理中，下架部分毫无质量的文章！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;公告&quot;&gt;&lt;a href=&quot;#公告&quot; class=&quot;headerlink&quot; title=&quot;公告&quot;&gt;&lt;/a&gt;公告&lt;/h1&gt;&lt;p&gt;博客整理中，下架部分毫无质量的文章！！！&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="公告" scheme="https://xieyaxin.top/categories/%E5%85%AC%E5%91%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>scss主题切换功能</title>
    <link href="https://xieyaxin.top/2020/05/14/%E5%89%8D%E7%AB%AF/scss%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2%E5%8A%9F%E8%83%BD/"/>
    <id>https://xieyaxin.top/2020/05/14/%E5%89%8D%E7%AB%AF/scss%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2%E5%8A%9F%E8%83%BD/</id>
    <published>2020-05-14T14:01:07.000Z</published>
    <updated>2020-07-12T15:30:22.455Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>主题：scss主题切换功能<br>概述：该文章主要为了实现css切换主题的功能，这只是一种方法，别的方式也可以实现。</p></blockquote><!--正文--><a id="more"></a><p>结构类似下面这样：</p><p><img src= "/img/loading.gif" data-src="/static/%E5%89%8D%E7%AB%AF/scss%E4%B8%BB%E9%A2%98%E5%88%87%E6%8D%A2%E5%8A%9F%E8%83%BD/images/image-20200514140159247.png" alt="image-20200514140159247"></p><p><strong><code>index.html</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang&#x3D;&quot;zh&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset&#x3D;&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name&#x3D;&quot;viewport&quot;</span><br><span class="line">          content&#x3D;&quot;width&#x3D;device-width, user-scalable&#x3D;no, initial-scale&#x3D;1.0, maximum-scale&#x3D;1.0, minimum-scale&#x3D;1.0&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv&#x3D;&quot;X-UA-Compatible&quot; content&#x3D;&quot;ie&#x3D;edge&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;&#x2F;title&gt;</span><br><span class="line">    &lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;.&#x2F;index.css&quot;&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body data-theme&#x3D;&quot;light&quot;&gt;</span><br><span class="line">    &lt;div class&#x3D;&quot;app-home&quot;&gt;</span><br><span class="line">        dsakdjsafs</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><p><strong><code>index.scss</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@import &#39;.&#x2F;_themeify.scss&#39;;</span><br><span class="line"></span><br><span class="line">.app-home &#123;</span><br><span class="line">  font-size: 18px;</span><br><span class="line">  @include themeify &#123;</span><br><span class="line">    color: themed(&#39;text-color-primary&#39;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>_themeify.scss</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@import &#39;.&#x2F;_themes.scss&#39;;</span><br><span class="line"></span><br><span class="line">@mixin themeify &#123;</span><br><span class="line">  @each $theme-name, $theme-map in $themes &#123;</span><br><span class="line">    $theme-map: $theme-map !global;</span><br><span class="line">    body[data-theme&#x3D;#&#123;$theme-name&#125;] &amp; &#123;</span><br><span class="line">      @content;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@function themed($key) &#123;</span><br><span class="line">  @return map-get($theme-map, $key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>_themes.scss</code></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">$themes: (</span><br><span class="line">        default: (</span><br><span class="line">          &#x2F;* font-size *&#x2F;</span><br><span class="line">                font-size-default: 14px,</span><br><span class="line">                font-size-lg: 16px,</span><br><span class="line">                font-size-sm: 12px,</span><br><span class="line">                color-white: #FFF,</span><br><span class="line">          &#x2F;* Color *&#x2F;</span><br><span class="line">                color-success: #13CE66,</span><br><span class="line">                color-error: #FF4949,</span><br><span class="line">                color-warning: #FFC82C,</span><br><span class="line">                color-info: #78A4FA,</span><br><span class="line">          &#x2F;&#x2F; Text Color</span><br><span class="line">                text-color-primary: #dc2b34,</span><br><span class="line">                text-color-white: #ffffff,</span><br><span class="line">                text-color-black: #000000,</span><br><span class="line">                text-color-default: #4a4a4a,</span><br><span class="line">                text-color-placeholder: #C9C9C9,</span><br><span class="line">                text-color-disabled: #CCCCCC,</span><br><span class="line">          &#x2F;&#x2F; Background Color</span><br><span class="line">                bg-color-primary: #d91720,</span><br><span class="line">                bg-color-primary-light: #b51d29,</span><br><span class="line">                bg-color-white: #ffffff,</span><br><span class="line">                bg-color-grey: #F7F7F7,</span><br><span class="line">                bg-color-light: #ECF5FD,</span><br><span class="line">                bg-color-verifycode: #cfcfcf,</span><br><span class="line">          &#x2F;&#x2F; Border Color</span><br><span class="line">                borer-color-primary: #e64644,</span><br><span class="line">                borer-color-primary-light: #dc2b34,</span><br><span class="line">                borer-color-white: #ffffff,</span><br><span class="line">                borer-color-default: #CCCCCC,</span><br><span class="line">          &#x2F;&#x2F; Link Color</span><br><span class="line">                link-color-primary: #d91721,</span><br><span class="line">                link-color-primary-light: #b51d29,</span><br><span class="line">                link-color: #6190E8,</span><br><span class="line">                link-color-light: #79A1EB,</span><br><span class="line">                link-color-disabled: #BFBFBF,</span><br><span class="line">          &#x2F;&#x2F; Icon Color</span><br><span class="line">                icon-color-base: #CCC,</span><br><span class="line">        ),</span><br><span class="line">        light: (</span><br><span class="line">          &#x2F;* font-size *&#x2F;</span><br><span class="line">                font-size-default: 14px,</span><br><span class="line">                font-size-lg: 16px,</span><br><span class="line">                font-size-sm: 12px,</span><br><span class="line">                color-white: #FFF,</span><br><span class="line">          &#x2F;* Color *&#x2F;</span><br><span class="line">                color-success: #13CE66,</span><br><span class="line">                color-error: #FF4949,</span><br><span class="line">                color-warning: #FFC82C,</span><br><span class="line">                color-info: #78A4FA,</span><br><span class="line">          &#x2F;&#x2F; Text Color</span><br><span class="line">                text-color-primary: #78A4FA,</span><br><span class="line">                text-color-white: #ffffff,</span><br><span class="line">                text-color-black: #000000,</span><br><span class="line">                text-color-default: #4a4a4a,</span><br><span class="line">                text-color-placeholder: #C9C9C9,</span><br><span class="line">                text-color-disabled: #CCCCCC,</span><br><span class="line">          &#x2F;&#x2F; Background Color</span><br><span class="line">                bg-color-primary: #d91720,</span><br><span class="line">                bg-color-primary-light: #b51d29,</span><br><span class="line">                bg-color-white: #ffffff,</span><br><span class="line">                bg-color-grey: #F7F7F7,</span><br><span class="line">                bg-color-light: #ECF5FD,</span><br><span class="line">                bg-color-verifycode: #cfcfcf,</span><br><span class="line">          &#x2F;&#x2F; Border Color</span><br><span class="line">                borer-color-primary: #e64644,</span><br><span class="line">                borer-color-primary-light: #dc2b34,</span><br><span class="line">                borer-color-white: #ffffff,</span><br><span class="line">                borer-color-default: #CCCCCC,</span><br><span class="line">          &#x2F;&#x2F; Link Color</span><br><span class="line">                link-color-primary: #d91721,</span><br><span class="line">                link-color-primary-light: #b51d29,</span><br><span class="line">                link-color: #6190E8,</span><br><span class="line">                link-color-light: #79A1EB,</span><br><span class="line">                link-color-disabled: #BFBFBF,</span><br><span class="line">          &#x2F;&#x2F; Icon Color</span><br><span class="line">                icon-color-base: #CCC,</span><br><span class="line">        ),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><blockquote><p>上面只需要切换<code>data-theme</code>的名字就行了，一共内置了两套主题。</p></blockquote><p><strong>编译过后的css</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@charset &quot;UTF-8&quot;;</span><br><span class="line">.app-home &#123;</span><br><span class="line">  font-size: 18px; &#125;</span><br><span class="line">  body[data-theme&#x3D;default] .app-home &#123;</span><br><span class="line">    color: #dc2b34; &#125;</span><br><span class="line">  body[data-theme&#x3D;light] .app-home &#123;</span><br><span class="line">    color: #78A4FA; &#125;</span><br></pre></td></tr></table></figure><p>可以看出就是做了两套兼容而已。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;主题：scss主题切换功能&lt;br&gt;概述：该文章主要为了实现css切换主题的功能，这只是一种方法，别的方式也可以实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--正文--&gt;
    
    </summary>
    
    
      <category term="前端" scheme="https://xieyaxin.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>内网穿透</title>
    <link href="https://xieyaxin.top/2020/04/23/%E5%B7%A5%E5%85%B7/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <id>https://xieyaxin.top/2020/04/23/%E5%B7%A5%E5%85%B7/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</id>
    <published>2020-04-23T13:32:36.000Z</published>
    <updated>2020-07-12T15:30:22.455Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>主题：内网穿透<br>概述：这是工具推荐类文章，推荐的是<a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="external nofollow noopener noreferrer">frp</a>库，经由国人开发，主要是把内网的网页进行映射，使得可以再公网访问，前提是有一个公网服务器。</p></blockquote><!--正文--><a id="more"></a><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li><p>公网服务器 IP 140.140.192.192</p></li><li><p>域名 <a href="http://www.good.com" target="_blank" rel="external nofollow noopener noreferrer">www.good.com</a> 解析至上面的服务器</p></li><li><p>本地运行的服务</p></li></ul><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>利用<code>frp</code>，可以实现任何人都可以通过配置的端口如 <code>www.good.com:7001</code> 访问我本机的<code>hbuilder</code>网页应用</p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>服务器和内网本机分别<a href="https://github.com/fatedier/frp/releases" target="_blank" rel="external nofollow noopener noreferrer">下载</a>对应系统平台的frp，<br>这里ubuntu服务器需要下载linux_arm_64， mac本机是frp_0.32.1_windows_amd64.zip</p><ul><li><p>先配服务端</p><p>linux_arm_64文件包在服务器上下载解压，编辑 <code>frps.ini</code>， 然后启动 <code>./frps -c ./frps.ini</code>，放后台启动命令 <code>nohup ./frps -c ./frps.ini &amp;</code>，配置修改如下</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">common</span>]</span><br><span class="line">bind_port = <span class="number">7000</span></span><br><span class="line"><span class="meta"># 客户端定义的端口</span></span><br><span class="line">vhost_http_port = <span class="number">7001</span></span><br></pre></td></tr></table></figure></li><li><p>配置客户端</p><p>frp_0.32.1_windows_amd64.zip文件包解压，编辑 <code>frpc.ini</code>,然后启动 <code>./frpc -c ./frpsc.ini</code>,可以自己放在后台执行，配置如下：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">common</span>]</span><br><span class="line">server_addr = <span class="number">140.140</span><span class="number">.192</span><span class="number">.192</span>   <span class="meta">#公网服务器ip</span></span><br><span class="line">server_port = <span class="number">7001</span>                       <span class="meta">#与服务端bind_port一致</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#公网访问内部web服务器以http方式</span></span><br><span class="line">[<span class="meta">web</span>]</span><br><span class="line">type = http         <span class="meta">#访问协议</span></span><br><span class="line">local_port = <span class="number">4200</span>   <span class="meta">#内网web服务的端口号</span></span><br><span class="line">custom_domains = www.good.com   <span class="meta">#所绑定的公网服务器域名，一级、二级域名都可以</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="配置服务端面板"><a href="#配置服务端面板" class="headerlink" title="配置服务端面板"></a>配置服务端面板</h4><p>修改服务端的 <code>frps.ini</code>， 添加 dashboard 信息，重启启动后可以通过<code>140.140.192.192:7500</code>打开控制面板</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">common</span>]</span><br><span class="line">bind_port = <span class="number">7000</span></span><br><span class="line"><span class="meta"># 客户端定义的端口</span></span><br><span class="line">vhost_http_port = <span class="number">7001</span></span><br><span class="line"></span><br><span class="line">dashboard_port = <span class="number">7500</span></span><br><span class="line"><span class="meta"># dashboard 用户名密码，默认都为 admin</span></span><br><span class="line">dashboard_user = admin</span><br><span class="line">dashboard_pwd = admin</span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><blockquote><p> Invalid Host header</p></blockquote><p>如果本机的web项目用了webpack server(目前vue cli, react cli, angular 本地开发用的都是这个) , 这个是webpack server的安全策略，如果是angular项目，需要在启动配置中加上 <code>--disable-host-check</code> 类似 <code>ng serve --open --host $IP --port $PORT --disable-host-check</code>。</p><p>如果是<code>uniapp</code>项目，进行如下配置：</p><p><img src= "/img/loading.gif" data-src="/static/%E5%B7%A5%E5%85%B7/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/images/image-20200423140150925.png" alt="image-20200423140150925"></p><blockquote><p>参考文档</p><p><a href="https://github.com/fatedier/frp/blob/master/README_zh.md#%E5%BC%80%E5%8F%91%E7%8A%B6%E6%80%81" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/fatedier/frp/blob/master/README_zh.md#%E5%BC%80%E5%8F%91%E7%8A%B6%E6%80%81</a></p><p><a href="https://www.jianshu.com/p/d579c2156311" target="_blank" rel="external nofollow noopener noreferrer">https://www.jianshu.com/p/d579c2156311</a></p><p><a href="https://www.kuke365.com/2019/09/19/uniapp%E4%B8%8Bh5%E7%AB%AF%E5%92%8Cvuejs%E4%B8%8B%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8Finvalid-host-header/" target="_blank" rel="external nofollow noopener noreferrer">https://www.kuke365.com/2019/09/19/uniapp%E4%B8%8Bh5%E7%AB%AF%E5%92%8Cvuejs%E4%B8%8B%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8Finvalid-host-header/</a></p><p><a href="https://www.it72.com/12580-1.htm" target="_blank" rel="external nofollow noopener noreferrer">https://www.it72.com/12580-1.htm</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;主题：内网穿透&lt;br&gt;概述：这是工具推荐类文章，推荐的是&lt;a href=&quot;https://github.com/fatedier/frp/blob/master/README_zh.md&quot; target=&quot;_blank&quot; rel=&quot;external nofollow noopener noreferrer&quot;&gt;frp&lt;/a&gt;库，经由国人开发，主要是把内网的网页进行映射，使得可以再公网访问，前提是有一个公网服务器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--正文--&gt;
    
    </summary>
    
    
      <category term="工具" scheme="https://xieyaxin.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="https://xieyaxin.top/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>git本地多账号配置</title>
    <link href="https://xieyaxin.top/2020/04/20/git/git%E6%9C%AC%E5%9C%B0%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/"/>
    <id>https://xieyaxin.top/2020/04/20/git/git%E6%9C%AC%E5%9C%B0%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/</id>
    <published>2020-04-20T10:59:02.000Z</published>
    <updated>2020-07-12T15:30:22.339Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ul><li><code>git环境</code></li></ul><a id="more"></a><h3 id="生成第一个账号的密钥"><a href="#生成第一个账号的密钥" class="headerlink" title="生成第一个账号的密钥"></a>生成第一个账号的密钥</h3><p>先确保你已经有多个git账号（如：一个github的账号、一个码云的账号、…）。</p><p>在Git Bash Here的控制台里输入：</p><p><code>git config --global user.name &quot;你的名称&quot;</code></p><p><code>git config --global user.email &quot;你的邮箱&quot;</code></p><p>这里的邮箱是你申请git账号时的邮箱，不报错就是正确的，继续往下走</p><p>输入 <code>ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code>  回车，再连续3次回车见下图：</p><p>此时看下图中有一行提示：<code>Your public key has been saved in /c/Users/xxx/.ssh/id_rsa.pub</code></p><p>到该路径（<code>C/Users/xxx/.ssh</code>）可以看见两个文件：id_rsa、id_rsa.pub 。</p><p><img src= "/img/loading.gif" data-src="/static/git/git%E6%9C%AC%E5%9C%B0%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/images/image-20200420110415002.png" alt="image-20200420110415002"></p><p>把密钥添加进git账号中：</p><p>用编辑器打开<code>id_rsa.pub</code>，推荐使用Notepad++，不要使用记事本打开，因为记事本的默认编码不是utf-8，拷贝里面的全部内容，登录你其中一个git 账号，例如:我登录github平台，后添加公钥里把它添加进去，公钥名称可以随便写。提交保存，输入你的github登录密码并提示添加成功。</p><p><img src= "/img/loading.gif" data-src="/static/git/git%E6%9C%AC%E5%9C%B0%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/images/image-20200420110453118.png" alt="image-20200420110453118"></p><p>测试刚才添加的github密钥是否成功：</p><p>在Git Bash Here中输入 ssh <a href="mailto:git@github.com" rel="external nofollow noopener noreferrer" target="_blank">git@github.com</a>  回车</p><p>会出现一个提示，输入 yes 回车，可以看见一个successfully的提示信息，说明添加成功，可以使用了。</p><p><img src= "/img/loading.gif" data-src="/static/git/git%E6%9C%AC%E5%9C%B0%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/images/image-20200420110505960.png" alt="image-20200420110505960"></p><h3 id="生成第二个账号的密钥"><a href="#生成第二个账号的密钥" class="headerlink" title="生成第二个账号的密钥"></a>生成第二个账号的密钥</h3><p>重复上面的步骤，那用户名和邮箱改成另一个账号的</p><blockquote><p>注：在输入<code>ssh-keygen -t rsa -C &quot;你的邮箱&quot;</code>的第一个选择存储路径的时候请自行改成自己的自定义名字，例如输入：smalldemons，这个时候一般是在<code>C/Users/xxx/.ssh</code>目录下就会又增加两个文件：smalldemons、smalldemons.pub,如果没看到的话，一般是在命令行打开的当前目录下，把这两个文件复制过去就行了</p></blockquote><p><img src= "/img/loading.gif" data-src="/static/git/git%E6%9C%AC%E5%9C%B0%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/images/image-20200420110803461.png" alt="image-20200420110803461"></p><p>添加多账号配置文件config（<code>C/Users/xxx/.ssh</code>）：</p><p><img src= "/img/loading.gif" data-src="/static/git/git%E6%9C%AC%E5%9C%B0%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/images/image-20200420110903542.png" alt="image-20200420110903542"></p><p>里面的代码 如下：</p><p><img src= "/img/loading.gif" data-src="/static/git/git%E6%9C%AC%E5%9C%B0%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/images/image-20200420111043623.png" alt="image-20200420111043623"></p><blockquote><p>Host 配置的别名</p><p>HostName  填写改git账号的官网地址</p><p>IdentityFile：是对应的密钥文件</p><p>如此就可以在多个账号间切换使用了</p></blockquote><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>这样的话只能使用<code>git@github.com:xxxx/xxxx.git</code>的方式拉取或推送代码，另一种我试的是失效的，得再看一下。</p><p><img src= "/img/loading.gif" data-src="/static/git/git%E6%9C%AC%E5%9C%B0%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/images/image-20200420111258450.png" alt="image-20200420111258450"></p><p>切换<code>npmrun</code>账号:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的名称&quot; </span><br><span class="line">git config --global user.email &quot;你的邮箱&quot; </span><br><span class="line"># 上面两步不是必须的</span><br><span class="line">git@npmrun.github.com:npmrun&#x2F;npmrun.github.io.git</span><br><span class="line">&#x2F;&#x2F; 注意前面的 git@npmrun.github.com,我加了npmrun,对应的是config里面的Host</span><br></pre></td></tr></table></figure><p>切换<code>1549469775</code>账号:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的名称&quot; </span><br><span class="line">git config --global user.email &quot;你的邮箱&quot; </span><br><span class="line"># 上面两步不是必须的</span><br><span class="line">git@1549469775.github.com:npmrun&#x2F;1549469775.github.io.git</span><br><span class="line">&#x2F;&#x2F; 注意前面的 git@1549469775.github.com,我加了1549469775,对应的是config里面的Host</span><br></pre></td></tr></table></figure><blockquote><p>查看自己的用户名和邮箱地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config user.name</span><br><span class="line">$ git config user.email</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>注意别把两个账号的ssh密钥都放一个账号里去了，会出问题，我就是有一个放一起了，结果两个配置访问的都是一个账号下的仓库了。</p></blockquote><blockquote><p>此时由于你的id_rsa存放的是1549469775的密钥，于是在使用<code>ssh git@github.com</code>发送的是默认的这个密钥，如果要修改默认登录的账号，可以在<code>config</code>文件里添加如下面的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;#npmrun Git账号</span><br><span class="line">&gt;Host github.com</span><br><span class="line">&gt;HostName github.com</span><br><span class="line">&gt;User git</span><br><span class="line">&gt;IdentityFile ~&#x2F;.ssh&#x2F;npmrun</span><br></pre></td></tr></table></figure><p>就是把<code>github.com</code>默认指向npmrun这个账号</p></blockquote><blockquote><p>之后可以自己添加对应的git的，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#poorman账号,这是我自建的git网站</span><br><span class="line">Host git.poorman.top</span><br><span class="line">HostName git.poorman.top</span><br><span class="line">User xxx  #</span><br><span class="line">IdentityFile ~&#x2F;.ssh&#x2F;poorman</span><br></pre></td></tr></table></figure></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><blockquote><p><a href="https://www.cnblogs.com/fanbi/p/7825746.html" target="_blank" rel="external nofollow noopener noreferrer">https://www.cnblogs.com/fanbi/p/7825746.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前提条件&quot;&gt;&lt;a href=&quot;#前提条件&quot; class=&quot;headerlink&quot; title=&quot;前提条件&quot;&gt;&lt;/a&gt;前提条件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git环境&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="git" scheme="https://xieyaxin.top/categories/git/"/>
    
    
  </entry>
  
  <entry>
    <title>cocos creator常用api</title>
    <link href="https://xieyaxin.top/2020/04/07/cocos/cocos-creator%E5%B8%B8%E7%94%A8api/"/>
    <id>https://xieyaxin.top/2020/04/07/cocos/cocos-creator%E5%B8%B8%E7%94%A8api/</id>
    <published>2020-04-07T13:41:11.000Z</published>
    <updated>2020-07-12T15:30:22.339Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>主题：cocos creator常用api<br>概述：收集cocos creator常用的函数，防止老年痴呆，记得东西太多会使自己混乱，写下来才是王道。</p></blockquote><!--正文--><a id="more"></a><blockquote><p><a href="https://blog.csdn.net/sotmwhat/article/details/93884076" target="_blank" rel="external nofollow noopener noreferrer">https://blog.csdn.net/sotmwhat/article/details/93884076</a></p></blockquote><h2 id="场景加载"><a href="#场景加载" class="headerlink" title="场景加载"></a>场景加载</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cc.director.loadScene(<span class="string">'场景名称'</span>);<span class="comment">//场景跳转</span></span><br><span class="line">cc.director.preloadScene(<span class="string">'场景名称'</span>);<span class="comment">//预加载场景</span></span><br><span class="line">cc.director.getScene();<span class="comment">//获取当前场景</span></span><br></pre></td></tr></table></figure><!--more--><h2 id="获取节点"><a href="#获取节点" class="headerlink" title="获取节点"></a>获取节点</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> node = cc.find(<span class="string">"Canvas/bg"</span>);<span class="comment">//通过访问路径来获取节点</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">this</span>.node.getChildByName(<span class="string">'name'</span>);<span class="comment">//通过名字获取子节点</span></span><br><span class="line">node.getComponent(cc.Label).string = <span class="string">'abc'</span>;<span class="comment">//获取节点上的组件值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = cc.find(<span class="string">"Canvas/bg"</span>).getComponent(cc.Sprite);<span class="comment">//通过访问路径来获取节点，及获取该节点的指定组件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.node .getChildByName(<span class="string">'节点名称'</span>).getComponent(cc.Label)<span class="comment">//通过节点名获取子节点，获取该节点指定组件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">this</span>.node;<span class="comment">//获取当前脚本所在的节点</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">this</span>.node.parent;<span class="comment">//获取父节点</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">this</span>.node.getChildByTag(<span class="number">1001</span>);<span class="comment">//通过标签获取子节点</span></span><br><span class="line"><span class="keyword">var</span> a = cc.find(<span class="string">"bg/score"</span>,<span class="keyword">this</span>.node);<span class="comment">//通过指定节点下的路径获取节点</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">this</span>.node.children;<span class="comment">//获取所有子节点</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="keyword">this</span>.node.childrenCount;<span class="comment">//获取子节点数量</span></span><br><span class="line"><span class="keyword">var</span> a = cc.director.getScene();<span class="comment">//获取场景主节点</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = cc.instantiate(node);<span class="comment">//克隆节点</span></span><br><span class="line"><span class="keyword">this</span>.node.parent = cc.find(<span class="string">'Canvas'</span>);<span class="comment">//绑定父节点</span></span><br><span class="line"><span class="keyword">this</span>.node.addChild(nodeName,zIndex,tag);<span class="comment">//添加子节点,可设置层级和标签</span></span><br><span class="line"><span class="keyword">this</span>.node.removeChild(nodeName);<span class="comment">//通过名字移除子节点</span></span><br><span class="line"><span class="keyword">this</span>.node.removeChildByTag (nodeTag);<span class="comment">//通过标签移除子节点</span></span><br><span class="line"><span class="keyword">this</span>.node.destroy();<span class="comment">//销毁节点</span></span><br><span class="line"><span class="keyword">this</span>.node.isValid;<span class="comment">//判定节点是否可用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.node.removeChild(newNode);<span class="comment">//移除节点中指定的子节点</span></span><br><span class="line"><span class="keyword">this</span>.node.removeChildByTag(<span class="number">1001</span>);<span class="comment">//通过标签移除节点中指定的子节点</span></span><br><span class="line"><span class="keyword">this</span>.node.removeAllChildren();<span class="comment">//移除所有子节点</span></span><br><span class="line"><span class="keyword">this</span>.node.destroyAllChildren();<span class="comment">//销毁所有子节点</span></span><br><span class="line"><span class="keyword">this</span>.node.cleanup();<span class="comment">//停止所有正在播放的动作和计时器</span></span><br><span class="line"><span class="keyword">var</span> sprites = <span class="keyword">this</span>.node.getComponentsInChildren(cc.Label);<span class="comment">//递归查找自身及所有子节点中指定类型的组件</span></span><br></pre></td></tr></table></figure><h2 id="获取节点位置，设置节点"><a href="#获取节点位置，设置节点" class="headerlink" title="获取节点位置，设置节点"></a>获取节点位置，设置节点</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = node.getPositionX();或 getPositionY() <span class="comment">//获取节点的X轴或Y轴坐标</span></span><br><span class="line"><span class="keyword">var</span> a = node.getScaleX(); 或getScaleY() <span class="comment">//获取节点的X轴或Y轴缩放比例</span></span><br><span class="line">node.x = <span class="number">100</span>;<span class="comment">//设置节点x轴坐标</span></span><br><span class="line">node.y = <span class="number">100</span>;<span class="comment">//设置节点y轴坐标</span></span><br><span class="line">node.setPosition(x,y); <span class="comment">//设置节点坐标</span></span><br><span class="line">node.rotation = <span class="number">90</span>; <span class="comment">//设置节点旋转角度</span></span><br><span class="line">node.scaleX = <span class="number">2</span>; <span class="comment">//设置节点x轴缩放倍数</span></span><br><span class="line">node.scaleY = <span class="number">2</span>; <span class="comment">//设置节点y轴缩放倍数</span></span><br><span class="line">node.setScale(<span class="number">2</span>); <span class="comment">//设置节点整体缩放倍数</span></span><br><span class="line">node.width = <span class="number">100</span>; <span class="comment">//设置节点宽度大小</span></span><br><span class="line">node.height = <span class="number">100</span>;  <span class="comment">//设置节点高度大小</span></span><br><span class="line">node.setContentSize(<span class="number">100</span>, <span class="number">100</span>); <span class="comment">//设置节点宽高尺寸大小</span></span><br><span class="line">node.anchorX = <span class="number">1</span>; <span class="comment">//设置节点x轴锚点坐标</span></span><br><span class="line">node.anchorY = <span class="number">0</span>; <span class="comment">//设置节点y轴锚点坐标</span></span><br><span class="line">node.setAnchorPoint(<span class="number">1</span>, <span class="number">0</span>); <span class="comment">//设置节点锚点坐标</span></span><br><span class="line">node.opacity = <span class="number">128</span>; <span class="comment">//设置节点透明度大小（0-255）</span></span><br><span class="line">node.setOpacity(<span class="number">20</span>); <span class="comment">//设置节点透明度（0~255）</span></span><br><span class="line">node.color = <span class="keyword">new</span> cc.color(<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>,<span class="number">255</span>); <span class="comment">//设置节点颜色（R,G,B,透明度）</span></span><br><span class="line"><span class="keyword">if</span> (cc.isValid(<span class="keyword">this</span>.label.node) ) <span class="comment">//判定节点是否存在</span></span><br><span class="line">node.destroy(); <span class="comment">//销毁节点</span></span><br><span class="line"><span class="keyword">this</span>.cannons = [];</span><br><span class="line"><span class="keyword">this</span>.cannons = node.getChildren(); <span class="comment">//获取所有子节点</span></span><br><span class="line"><span class="keyword">this</span>.cannons = node.getChildrenCount(); <span class="comment">//获取子节点数量</span></span><br><span class="line">node.active = <span class="literal">false</span>; <span class="comment">//关闭节点(隐藏节点)</span></span><br><span class="line">cc.game.addPersistRootNode(myNode); <span class="comment">//常驻节点（全局变量）</span></span><br><span class="line">cc.game.removePersistRootNode(myNode); <span class="comment">//取消常驻节点</span></span><br></pre></td></tr></table></figure><h2 id="动作操作"><a href="#动作操作" class="headerlink" title="动作操作"></a>动作操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">cc.show()&#x2F;&#x2F;立即显示</span><br><span class="line">cc.hide ()&#x2F;&#x2F;立即隐藏</span><br><span class="line">cc.toggleVisibility()&#x2F;&#x2F;显隐切换</span><br><span class="line">cc.fadeIn(1)&#x2F;&#x2F;渐显效果</span><br><span class="line">cc.fadeOut(1)&#x2F;&#x2F;渐隐效果</span><br><span class="line">cc.delayTime(1)&#x2F;&#x2F;等待1秒</span><br><span class="line">node.runAction(cc.moveTo(1,0,0)); &#x2F;&#x2F;移动到当前节点（时间（s），X轴坐标，Y 轴坐标）</span><br><span class="line">node.runAction(cc.scaleTo(1,0.7,0.8));&#x2F;&#x2F;缩放到当前倍数节点（时间（s），X轴倍数，Y 轴倍数）</span><br><span class="line">node.runAction(cc.rotateTo(1,160,160));&#x2F;&#x2F;旋转到指定角度（时间（s），X轴角度，Y 轴角度）</span><br><span class="line">node.runAction(cc.skewTo(1,5,-5));&#x2F;&#x2F;变化节点倾斜度（时间（s），X轴倾斜度，Y 轴倾斜度）</span><br><span class="line"></span><br><span class="line">node.runAction(cc.fadeTo(2,0));&#x2F;&#x2F;变化当前节点的透明度（时间（s），透明度）</span><br><span class="line"></span><br><span class="line">node.runAction(cc.tintTo(2,255,255,0));&#x2F;&#x2F;变化当前节点颜色（时间，R,G,B）</span><br><span class="line">node.stopAllActions();&#x2F;&#x2F;停止所有动作</span><br><span class="line">&#x2F;&#x2F;自定义动作</span><br><span class="line">var action &#x3D; cc.moveTo(2, 100, 100);&#x2F;&#x2F; 创建一个移动动作</span><br><span class="line">node.runAction(action);&#x2F;&#x2F; 执行动作</span><br><span class="line">node.stopAction(action);&#x2F;&#x2F; 停止一个动作</span><br><span class="line"></span><br><span class="line">cc.sequence(action1,action2); &#x2F;&#x2F;按顺序连续执行，先action1，后action2</span><br><span class="line"></span><br><span class="line">cc.spawn(action1，action2); &#x2F;&#x2F;同时执行，action1和action2一起执行</span><br><span class="line"></span><br><span class="line">cc.repeatForever(cc.sequence(action1,action2)); &#x2F;&#x2F;一直重复括号里的动作</span><br></pre></td></tr></table></figure><h2 id="计时器"><a href="#计时器" class="headerlink" title="计时器"></a>计时器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;只用1次的计时器,2秒后执行</span><br><span class="line">        this.scheduleOnce(function()&#123;</span><br><span class="line">            &#x2F;&#x2F;一条或多条执行语句  </span><br><span class="line"></span><br><span class="line">        &#125;,2); &#x2F;&#x2F;(function()&#123;&#125;,时间（s）)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;每隔5秒执行1次</span><br><span class="line">        this.schedule(function()&#123;</span><br><span class="line">            &#x2F;&#x2F;一条或多条执行语句  </span><br><span class="line"></span><br><span class="line">        &#125;,5);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;计算多次的计时器（1秒后，以0.1秒的执行间隔，执行10次）</span><br><span class="line">        this.schedule(function()&#123;</span><br><span class="line">            &#x2F;&#x2F;一条或多条执行语句</span><br><span class="line"></span><br><span class="line">        &#125;,0.1,10,1); &#x2F;&#x2F;(function()&#123;&#125;,间隔时间，次数，多久后开始)</span><br><span class="line"></span><br><span class="line">this.unscheduleAllCallbacks(this);&#x2F;&#x2F;停止某组件的所有计时器</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;自定义定时器执行内容（相比常规使用的定时器优势是：方便随时开启或关闭）</span><br><span class="line">var cb&#x3D; function()&#123;</span><br><span class="line">    &#x2F;&#x2F;do something</span><br><span class="line">&#125;;</span><br><span class="line">this.schedule(cb,1);&#x2F;&#x2F;启动定时器</span><br><span class="line">this.unschedule(cb);&#x2F;&#x2F;取消定时器</span><br></pre></td></tr></table></figure><h2 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(开始：&#39;touchstart&#39;，移动：&#39;touchmove&#39;，结束：&#39;touchend&#39;，取消：&#39;touchcancel&#39;)</span><br><span class="line">node.on(&#39;touchstart&#39;,function(event)&#123;</span><br><span class="line">    this.doSomething();</span><br><span class="line">&#125;,this);  </span><br><span class="line">var a &#x3D; event.getID();&#x2F;&#x2F;获取触点的ID</span><br><span class="line">var a &#x3D; event.getLocationX();&#x2F;&#x2F;获取触摸点的坐标X</span><br><span class="line">var b &#x3D; event.getLocationY();&#x2F;&#x2F;获取触摸点的坐标Y</span><br><span class="line"></span><br><span class="line">cc.eventManager.addListener(&#123;</span><br><span class="line">            event: cc.EventListener.KEYBOARD&#x2F;TOUCH_ONE_BY_ONE,myfunction&#125;,self.node);</span><br></pre></td></tr></table></figure><h2 id="分辨率"><a href="#分辨率" class="headerlink" title="分辨率"></a>分辨率</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;获得设备分辨率</span><br><span class="line">var b &#x3D; cc.director.getWinSizeInPixels()</span><br><span class="line">var bx &#x3D; b.width</span><br><span class="line">var by &#x3D; b.height</span><br><span class="line"></span><br><span class="line">cc.view.getCanvasSize().width;&#x2F;&#x2F;获得设备分辨率的宽度</span><br><span class="line">cc.view.getCanvasSize().height;&#x2F;&#x2F;获得设备分辨率的高度</span><br><span class="line">cc.director.setDisplayStats(true);&#x2F;&#x2F;显示帧数信息</span><br></pre></td></tr></table></figure><h2 id="音频控制"><a href="#音频控制" class="headerlink" title="音频控制"></a>音频控制</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cc.audioEngine.playMusic(this.BGAudio,true);&#x2F;&#x2F;播放音乐（true代表循环）</span><br><span class="line">cc.audioEngine.stopMusic()&#x2F;&#x2F;停止播放背景音乐</span><br><span class="line">cc.audioEngine.playEffect(this.ClickAudio,false);&#x2F;&#x2F;播放音效（false代表只播放一次）</span><br><span class="line">cc.audioEngine.stopEffect(音效变量名);&#x2F;&#x2F;停止指定音效（需要先把音效赋值给变量）</span><br><span class="line">cc.audioEngine.AllEffects();&#x2F;&#x2F;停止所有音效</span><br><span class="line">cc.audioEngine.setMusicVolume(参数);  &#x2F;&#x2F;设置背景音乐的音量（该参数范围是0到1）</span><br><span class="line">cc.audioEngine.setEffectsVolume(参数);  &#x2F;&#x2F;设置音效的音量（该参数范围是0到1）</span><br></pre></td></tr></table></figure><h2 id="存档操作"><a href="#存档操作" class="headerlink" title="存档操作"></a>存档操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cc.sys.localStorage.setItem(&#39;存储标识名&#39;,变量名);&#x2F;&#x2F;存储存档数据</span><br><span class="line">var a &#x3D; cc.sys.localStorage.getItem(&#39;存储标识名&#39;);&#x2F;&#x2F;读取存档数据</span><br><span class="line">cc.sys.localStorage.removeItem(&#39;存储标识名&#39;);&#x2F;&#x2F;擦除存档数据</span><br><span class="line">userData &#x3D; &#123;</span><br><span class="line">    name: &#39;Tracer&#39;,</span><br><span class="line">    level: 1,</span><br><span class="line">    gold: 100</span><br><span class="line">&#125;;</span><br><span class="line">cc.sys.localStorage.setItem(&#39;userData&#39;, JSON.stringify(userData));&#x2F;&#x2F;存取复杂对象数据</span><br><span class="line">var userData &#x3D; JSON.parse(cc.sys.localStorage.getItem(&#39;userData&#39;));&#x2F;&#x2F;读取复杂对象数据</span><br></pre></td></tr></table></figure><h2 id="判断平台"><a href="#判断平台" class="headerlink" title="判断平台"></a>判断平台</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cc.sys.isNative  &#x2F;&#x2F;是否是本地</span><br><span class="line">cc.sys.isBrowser  &#x2F;&#x2F;是否是网页</span><br><span class="line">cc.sys.isMobile  &#x2F;&#x2F;是否是移动系统</span><br><span class="line">cc.sys.platform  &#x2F;&#x2F;正在运行的平台</span><br><span class="line">cc.sys.language  &#x2F;&#x2F;当前运行系统的语言</span><br><span class="line">cc.sys.os  &#x2F;&#x2F;当前正在运行的系统</span><br><span class="line">cc.sys.OS_IOS  &#x2F;&#x2F;是否是IOS系统</span><br><span class="line">cc.sys.OS_ANDROID  &#x2F;&#x2F;是否是android系统</span><br><span class="line">cc.sys.OS_WINDOWS  &#x2F;&#x2F;是否是windows系统</span><br><span class="line">cc.sys.openURL(&#39;Http:&#x2F;&#x2F;www.baidu.com&#39;);  &#x2F;&#x2F;打开网页</span><br></pre></td></tr></table></figure><h2 id="监听和发射事件"><a href="#监听和发射事件" class="headerlink" title="监听和发射事件"></a>监听和发射事件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">this.node.pauseSystemEvents(true);&#x2F;&#x2F;暂停节点系统事件</span><br><span class="line">this.node.resumeSystemEvents(true);&#x2F;&#x2F;恢复节点系统事件</span><br><span class="line">this.node.targetOff(this);&#x2F;&#x2F;移除所有注册事件</span><br><span class="line"></span><br><span class="line">触摸监听：开始&#39;touchstart&#39;,移动&#39;touchmove&#39;,结束&#39;touchend&#39;,取消&#39;touchcancel&#39;</span><br><span class="line">var pos &#x3D; event.getLocation();&#x2F;&#x2F;获取触摸点的坐标(包含X和Y)</span><br><span class="line">var x &#x3D; event.getLocationX();&#x2F;&#x2F;获取触摸点的X坐标</span><br><span class="line">var y &#x3D; event.getLocationY();&#x2F;&#x2F;获取触摸点的Y坐标</span><br><span class="line">var a &#x3D; event.getID();&#x2F;&#x2F;获取触点的ID</span><br><span class="line"></span><br><span class="line">鼠标监听：鼠标按下&#39;mousedown&#39;,移入节点&#39;mouseenter&#39;,节点中移动&#39;mousemove&#39;,移出节点&#39;mouseleave,&#39;松开鼠标&#39;mouseup&#39;</span><br><span class="line">var a &#x3D; event.getScrollY();&#x2F;&#x2F;获取滚轮滚动的 Y 轴距离，只有滚动时才有效</span><br><span class="line">var a &#x3D; event.getLocation();&#x2F;&#x2F;获取鼠标位置对象，对象包含 x 和 y 属性</span><br><span class="line"></span><br><span class="line">输入框监听：获得焦点&#39;editing-did-began&#39;,文字变化&#39;text-changed&#39;,失去焦点&#39;editing-did-ended&#39;,按下回车&#39;editing-return&#39;</span><br><span class="line"></span><br><span class="line">属性变化监听：位置&#39;position-changed&#39;,宽高 &#39;size-changed&#39;,旋转&#39;rotation-changed&#39;,缩放&#39;scale-changed&#39;</span><br><span class="line"></span><br><span class="line">ScrollView控件监听：滚动中&#39;scrolling&#39;,停止滚动&#39;scroll-ended&#39;</span><br><span class="line"></span><br><span class="line">用户自定义事件:</span><br><span class="line">this.node.on(&#39;事件名&#39;,function,this);&#x2F;&#x2F;注册监听</span><br><span class="line">this.node.emit(&#39;事件名&#39;);&#x2F;&#x2F;发送监听广播</span><br><span class="line">this.node.off(&#39;事件名&#39;,function,this);&#x2F;&#x2F;关闭监听</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;注册带参数监听</span><br><span class="line">this.node.on(&#39;事件名&#39;,function(event)&#123;</span><br><span class="line"></span><br><span class="line">“具体方法函数内容”</span><br><span class="line"></span><br><span class="line">&#125;,this);</span><br><span class="line">&#x2F;&#x2F;发送带参数的监听</span><br><span class="line">this.node.emit(&#39;事件名&#39;,&#123;id:1001&#125;);</span><br><span class="line">cc.eventManager.addListener(listener, node);&#x2F;&#x2F;添加事件</span><br><span class="line">cc.eventManager.removeListener((listener);&#x2F;&#x2F;移除事件</span><br></pre></td></tr></table></figure><h2 id="其他操作"><a href="#其他操作" class="headerlink" title="其他操作"></a>其他操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cc.director.pause();&#x2F;&#x2F;暂停</span><br><span class="line">cc.director.resume();&#x2F;&#x2F;继续</span><br><span class="line">cc.director.end();&#x2F;&#x2F;退出整个应用</span><br><span class="line">cc.log(变量)  或 console.log(something);&#x2F;&#x2F;输出想要的信息</span><br><span class="line">let self &#x3D; this;&#x2F;&#x2F;锁定当前使用的this指向</span><br><span class="line">node.getLocalZOrder();&#x2F;&#x2F;层级获取</span><br><span class="line">node.setLocalZOrder(1);&#x2F;&#x2F;层级改变</span><br><span class="line">cc.find(&#39;canvas&#x2F;map&#39; + num)&#x2F;&#x2F;读取带变量的路径</span><br><span class="line">cc.sys.openURL(&#39;Http:&#x2F;&#x2F;www.baidu.com&#39;);&#x2F;&#x2F;打开网页</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;主题：cocos creator常用api&lt;br&gt;概述：收集cocos creator常用的函数，防止老年痴呆，记得东西太多会使自己混乱，写下来才是王道。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--正文--&gt;
    
    </summary>
    
    
      <category term="cocos" scheme="https://xieyaxin.top/categories/cocos/"/>
    
    
      <category term="cocos" scheme="https://xieyaxin.top/tags/cocos/"/>
    
  </entry>
  
</feed>
